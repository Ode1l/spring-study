<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- DataSource: 使用Spring数据源替换Mybatis配置 c3p0 dbcp druid -->
    <!-- 这里使用Spring提供的JDBC -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/mybatis
                ?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;
                allowMultiQueries=true&amp;useAffectedRows=true&amp;
                serverTimezone=Asia/Shanghai"/>
        <property name="username" value="root"/>
        <property name="password" value="112358"/>
    </bean>
    <!-- SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 绑定Mybatis配置文件,可以不用 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!-- 配置声明式事务 DataSourceTransactionManager  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 可以使用属性方式，官方使用构造器方式 -->
        <!-- <property name="dataSource" ref="dataSource"/> -->
        <!-- 构造器方式同理 -->
        <constructor-arg ref="dataSource" />
    </bean>

    <!-- 结合AOP，实现事务植入 -->
    <!-- 配置事务通知 -->
    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        <!-- 给哪些方法配置事务 -->
        <!-- 配置事务的传播特性 propagation 默认 REQUIRED -->
        <tx:attributes>
            <!-- <tx:method name="add" propagation="REQUIRED"/> -->
            <!-- <tx:method name="update" propagation="REQUIRED"/> -->
            <!-- <tx:method name="delete" propagation="REQUIRED"/> -->
            <!-- <tx:method name="query" read-only="true"/> -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切入点 -->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.iris.service.*.*(..))"/>
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="txPointCut"/>
    </aop:config>
</beans>
